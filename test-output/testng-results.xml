<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="6" total="14" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="loan department" duration-ms="152" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
    <groups>
      <group name="smoke">
        <method signature="day1.Demo()[pri:0, instance:Test1.day1@b8ed2a29]" name="Demo" class="Test1.day1"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Homeloan" duration-ms="53" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
      <class name="Test1.day1">
        <test-method status="PASS" signature="AfterSt()[pri:0, instance:Test1.day1@b8ed2a29]" name="AfterSt" is-config="true" duration-ms="0" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSt -->
      </class> <!-- Test1.day1 -->
      <class name="Test1.Homeloan">
        <test-method status="PASS" signature="BeforeSt()[pri:0, instance:Test1.Homeloan@d6979041]" name="BeforeSt" is-config="true" duration-ms="14" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSt -->
        <test-method status="PASS" signature="APIloginhomeloan()[pri:0, instance:Test1.Homeloan@d6979041]" name="APIloginhomeloan" duration-ms="9" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIloginhomeloan -->
        <test-method status="PASS" signature="Aftereverymethod()[pri:0, instance:Test1.Homeloan@d6979041]" name="Aftereverymethod" is-config="true" duration-ms="3" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftereverymethod -->
        <test-method status="PASS" signature="Afterclass()[pri:0, instance:Test1.Homeloan@d6979041]" name="Afterclass" is-config="true" duration-ms="1" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterclass -->
      </class> <!-- Test1.Homeloan -->
    </test> <!-- Homeloan -->
    <test name="Personal loan" duration-ms="152" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
      <class name="Test1.day2">
        <test-method status="FAIL" signature="Demo2(java.lang.String)[pri:0, instance:Test1.day2@94ffcd55]" name="Demo2" duration-ms="56" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.personal.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at Test1.day2.Demo2(day2.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)
at java.lang.reflect.Method.invoke(Method.java:507)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:277)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1153)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.lang.Thread.run(Thread.java:785)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2 -->
        <test-method status="PASS" signature="Demo4()[pri:0, instance:Test1.day2@94ffcd55]" name="Demo4" is-config="true" duration-ms="1" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo4 -->
      </class> <!-- Test1.day2 -->
      <class name="Test1.day1">
        <test-method status="PASS" signature="Demo3()[pri:0, instance:Test1.day1@b8ed2a29]" name="Demo3" is-config="true" duration-ms="1" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
        <test-method status="PASS" signature="Beforeeverymethod()[pri:0, instance:Test1.day1@b8ed2a29]" name="Beforeeverymethod" is-config="true" duration-ms="0" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeeverymethod -->
        <test-method status="PASS" signature="Demo()[pri:0, instance:Test1.day1@b8ed2a29]" name="Demo" duration-ms="5" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method status="PASS" signature="Beforeeverymethod()[pri:0, instance:Test1.day1@b8ed2a29]" name="Beforeeverymethod" is-config="true" duration-ms="1" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeeverymethod -->
        <test-method status="PASS" signature="Demo5(java.lang.String)[pri:0, instance:Test1.day1@b8ed2a29]" name="Demo5" duration-ms="2" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.Loan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo5 -->
      </class> <!-- Test1.day1 -->
    </test> <!-- Personal loan -->
    <test name="Carloan" duration-ms="137" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
      <class name="Test1.carloan">
        <test-method status="PASS" signature="Beforeclass()[pri:0, instance:Test1.carloan@d90d24af]" name="Beforeclass" is-config="true" duration-ms="1" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Beforeclass -->
        <test-method status="PASS" signature="APILoginCarloan(java.lang.String, java.lang.String)[pri:0, instance:Test1.carloan@d90d24af]" name="APILoginCarloan" duration-ms="34" started-at="2022-01-05T07:20:44Z" data-provider="getData" finished-at="2022-01-05T07:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firstname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Passwrd1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarloan -->
        <test-method status="PASS" signature="APILoginCarloan(java.lang.String, java.lang.String)[pri:0, instance:Test1.carloan@d90d24af]" name="APILoginCarloan" duration-ms="4" started-at="2022-01-05T07:20:44Z" data-provider="getData" finished-at="2022-01-05T07:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Secondname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Passwrd2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarloan -->
        <test-method status="PASS" signature="APILoginCarloan(java.lang.String, java.lang.String)[pri:0, instance:Test1.carloan@d90d24af]" name="APILoginCarloan" duration-ms="1" started-at="2022-01-05T07:20:44Z" data-provider="getData" finished-at="2022-01-05T07:20:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Thirdname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Passwrd3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginCarloan -->
        <test-method status="PASS" signature="WebLoginCarloan()[pri:0, instance:Test1.carloan@d90d24af]" name="WebLoginCarloan" duration-ms="19" started-at="2022-01-05T07:20:44Z" finished-at="2022-01-05T07:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarloan -->
      </class> <!-- Test1.carloan -->
    </test> <!-- Carloan -->
  </suite> <!-- loan department -->
</testng-results>
